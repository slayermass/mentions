{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\r\n  function CustomEvent(event, params) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    }\r\n    var evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\r\n    return evt\r\n  }\r\n\r\n if (typeof window.Event !== 'undefined') {\r\n   CustomEvent.prototype = window.Event.prototype\r\n }\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n","class TributeEvents {\r\n  constructor(tribute) {\r\n    this.tribute = tribute;\r\n    this.tribute.events = this;\r\n  }\r\n\r\n  static keys() {\r\n    return [\r\n      {\r\n        key: 9,\r\n        value: \"TAB\"\r\n      },\r\n      {\r\n        key: 8,\r\n        value: \"DELETE\"\r\n      },\r\n      {\r\n        key: 13,\r\n        value: \"ENTER\"\r\n      },\r\n      {\r\n        key: 27,\r\n        value: \"ESCAPE\"\r\n      },\r\n      {\r\n        key: 32,\r\n        value: \"SPACE\"\r\n      },\r\n      {\r\n        key: 38,\r\n        value: \"UP\"\r\n      },\r\n      {\r\n        key: 40,\r\n        value: \"DOWN\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  bind(element) {\r\n    element.boundKeydown = this.keydown.bind(element, this);\r\n    element.boundKeyup = this.keyup.bind(element, this);\r\n    element.boundInput = this.input.bind(element, this);\r\n\r\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\r\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\r\n    element.addEventListener(\"input\", element.boundInput, true);\r\n  }\r\n\r\n  unbind(element) {\r\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\r\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\r\n    element.removeEventListener(\"input\", element.boundInput, true);\r\n\r\n    delete element.boundKeydown;\r\n    delete element.boundKeyup;\r\n    delete element.boundInput;\r\n  }\r\n\r\n  keydown(instance, event) {\r\n    if (instance.shouldDeactivate(event)) {\r\n      instance.tribute.isActive = false;\r\n      instance.tribute.hideMenu();\r\n    }\r\n\r\n    let element = this;\r\n    instance.commandEvent = false;\r\n\r\n    TributeEvents.keys().forEach(o => {\r\n      if (o.key === event.keyCode) {\r\n        instance.commandEvent = true;\r\n        instance.callbacks()[o.value.toLowerCase()](event, element);\r\n      }\r\n    });\r\n  }\r\n\r\n  input(instance, event) {\r\n    instance.inputEvent = true;\r\n    instance.keyup.call(this, instance, event);\r\n  }\r\n\r\n  click(instance, event) {\r\n    let tribute = instance.tribute;\r\n    if (tribute.menu && tribute.menu.contains(event.target)) {\r\n      let li = event.target;\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      while (li.nodeName.toLowerCase() !== \"li\") {\r\n        li = li.parentNode;\r\n        if (!li || li === tribute.menu) {\r\n          throw new Error(\"cannot find the <li> container for the click\");\r\n        }\r\n      }\r\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\r\n      tribute.hideMenu();\r\n\r\n      // TODO: should fire with externalTrigger and target is outside of menu\r\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\r\n      tribute.current.externalTrigger = false;\r\n      setTimeout(() => tribute.hideMenu());\r\n    }\r\n  }\r\n\r\n  keyup(instance, event) {\r\n    if (instance.inputEvent) {\r\n      instance.inputEvent = false;\r\n    }\r\n    instance.updateSelection(this);\r\n\r\n    console.log('keyup', event);\r\n\r\n    if (event.keyCode === 27 || event.key === 'Control'|| event.key === 'Cmd') {\r\n      return;\r\n    }\r\n    console.log('p0');\r\n\r\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\r\n      instance.tribute.hasTrailingSpace = false;\r\n      instance.commandEvent = true;\r\n      instance.callbacks()[\"space\"](event, this);\r\n      return;\r\n    }\r\n    console.log('p1');\r\n\r\n    if (!instance.tribute.isActive) {\r\n      if (instance.tribute.autocompleteMode) {\r\n        instance.callbacks().triggerChar(event, this, \"\");\r\n      } else {\r\n        let keyCode = instance.getKeyCode(instance, this, event);\r\n\r\n        if (isNaN(keyCode) || !keyCode) return;\r\n\r\n        let trigger = instance.tribute.triggers().find(trigger => {\r\n          return trigger.charCodeAt(0) === keyCode;\r\n        });\r\n\r\n        if (typeof trigger !== \"undefined\") {\r\n          instance.callbacks().triggerChar(event, this, trigger);\r\n        }\r\n      }\r\n    }\r\n    console.log('p2');\r\n\r\n    if (\r\n      instance.tribute.current.mentionText.length <\r\n      instance.tribute.current.collection.menuShowMinLength\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // if (\r\n    //   !TributeEvents.keys().map(v => v.key).includes(event.keyCode)\r\n    //   || event.key === instance.tribute.current.trigger\r\n    // ) {\r\n    //   return;\r\n    // }\r\n\r\n    console.log('GO', event.key === instance.tribute.current.trigger, instance.tribute.current.trigger,TributeEvents.keys().map(v => v.key).includes(event.keyCode));\r\n\r\n    if (\r\n      ((instance.tribute.current.trigger ||\r\n        instance.tribute.autocompleteMode) &&\r\n        instance.commandEvent === false) ||\r\n      (instance.tribute.isActive && event.keyCode === 8)\r\n    ) {\r\n      instance.tribute.showMenuFor(this, true);\r\n    }\r\n  }\r\n\r\n  shouldDeactivate(event) {\r\n    if (!this.tribute.isActive) return false;\r\n\r\n    if (this.tribute.current.mentionText.length === 0) {\r\n      let eventKeyPressed = false;\r\n      TributeEvents.keys().forEach(o => {\r\n        if (event.keyCode === o.key) eventKeyPressed = true;\r\n      });\r\n\r\n      return !eventKeyPressed;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getKeyCode(instance, el, event) {\r\n    let char;\r\n    let tribute = instance.tribute;\r\n    let info = tribute.range.getTriggerInfo(\r\n      false,\r\n      tribute.hasTrailingSpace,\r\n      true,\r\n      tribute.allowSpaces,\r\n      tribute.autocompleteMode\r\n    );\r\n\r\n    if (info) {\r\n      return info.mentionTriggerChar.charCodeAt(0);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  updateSelection(el) {\r\n    this.tribute.current.element = el;\r\n    let info = this.tribute.range.getTriggerInfo(\r\n      false,\r\n      this.tribute.hasTrailingSpace,\r\n      true,\r\n      this.tribute.allowSpaces,\r\n      this.tribute.autocompleteMode\r\n    );\r\n\r\n    if (info) {\r\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\r\n      this.tribute.current.mentionText = info.mentionText;\r\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\r\n    }\r\n  }\r\n\r\n  callbacks() {\r\n    return {\r\n      triggerChar: (e, el, trigger) => {\r\n        let tribute = this.tribute;\r\n        tribute.current.trigger = trigger;\r\n\r\n        let collectionItem = tribute.collection.find(item => {\r\n          return item.trigger === trigger;\r\n        });\r\n\r\n        tribute.current.collection = collectionItem;\r\n\r\n        if (\r\n          tribute.current.mentionText.length >=\r\n            tribute.current.collection.menuShowMinLength &&\r\n          tribute.inputEvent\r\n        ) {\r\n          tribute.showMenuFor(el, true);\r\n        }\r\n      },\r\n      enter: (e, el) => {\r\n        // choose selection\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          setTimeout(() => {\r\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\r\n            this.tribute.hideMenu();\r\n          }, 0);\r\n        }\r\n      },\r\n      escape: (e, el) => {\r\n        if (this.tribute.isActive) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          this.tribute.isActive = false;\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      tab: (e, el) => {\r\n        // choose first match\r\n        this.callbacks().enter(e, el);\r\n      },\r\n      space: (e, el) => {\r\n        if (this.tribute.isActive) {\r\n          if (this.tribute.spaceSelectsMatch) {\r\n            this.callbacks().enter(e, el);\r\n          } else if (!this.tribute.allowSpaces) {\r\n            e.stopPropagation();\r\n            setTimeout(() => {\r\n              this.tribute.hideMenu();\r\n              this.tribute.isActive = false;\r\n            }, 0);\r\n          }\r\n        }\r\n      },\r\n      up: (e, el) => {\r\n        // navigate up ul\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          let count = this.tribute.current.filteredItems.length,\r\n            selected = this.tribute.menuSelected;\r\n\r\n          if (count > selected && selected > 0) {\r\n            this.tribute.menuSelected--;\r\n            this.setActiveLi();\r\n          } else if (selected === 0) {\r\n            this.tribute.menuSelected = count - 1;\r\n            this.setActiveLi();\r\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\r\n          }\r\n        }\r\n      },\r\n      down: (e, el) => {\r\n        // navigate down ul\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          let count = this.tribute.current.filteredItems.length - 1,\r\n            selected = this.tribute.menuSelected;\r\n\r\n          if (count > selected) {\r\n            this.tribute.menuSelected++;\r\n            this.setActiveLi();\r\n          } else if (count === selected) {\r\n            this.tribute.menuSelected = 0;\r\n            this.setActiveLi();\r\n            this.tribute.menu.scrollTop = 0;\r\n          }\r\n        }\r\n      },\r\n      delete: (e, el) => {\r\n        if (\r\n          this.tribute.isActive &&\r\n          this.tribute.current.mentionText.length < 1\r\n        ) {\r\n          this.tribute.hideMenu();\r\n        } else if (this.tribute.isActive) {\r\n          this.tribute.showMenuFor(el);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setActiveLi(index) {\r\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\r\n      length = lis.length >>> 0;\r\n\r\n    if (index) this.tribute.menuSelected = parseInt(index);\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let li = lis[i];\r\n      if (i === this.tribute.menuSelected) {\r\n        li.classList.add(this.tribute.current.collection.selectClass);\r\n\r\n        let liClientRect = li.getBoundingClientRect();\r\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\r\n\r\n        if (liClientRect.bottom > menuClientRect.bottom) {\r\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\r\n          this.tribute.menu.scrollTop += scrollDistance;\r\n        } else if (liClientRect.top < menuClientRect.top) {\r\n          let scrollDistance = menuClientRect.top - liClientRect.top;\r\n          this.tribute.menu.scrollTop -= scrollDistance;\r\n        }\r\n      } else {\r\n        li.classList.remove(this.tribute.current.collection.selectClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFullHeight(elem, includeMargin) {\r\n    let height = elem.getBoundingClientRect().height;\r\n\r\n    if (includeMargin) {\r\n      let style = elem.currentStyle || window.getComputedStyle(elem);\r\n      return (\r\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\r\n      );\r\n    }\r\n\r\n    return height;\r\n  }\r\n}\r\n\r\nexport default TributeEvents;\r\n","class TributeMenuEvents {\r\n  constructor(tribute) {\r\n    this.tribute = tribute;\r\n    this.tribute.menuEvents = this;\r\n    this.menu = this.tribute.menu;\r\n  }\r\n\r\n  bind(menu) {\r\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\r\n    this.menuContainerScrollEvent = this.debounce(\r\n      () => {\r\n        if (this.tribute.isActive) {\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      10,\r\n      false\r\n    );\r\n    this.windowResizeEvent = this.debounce(\r\n      () => {\r\n        if (this.tribute.isActive) {\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      10,\r\n      false\r\n    );\r\n\r\n    // fixes IE11 issues with mousedown\r\n    this.tribute.range\r\n      .getDocument()\r\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\r\n    this.tribute.range\r\n      .getDocument()\r\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\r\n    window.addEventListener(\"resize\", this.windowResizeEvent);\r\n\r\n    if (this.menuContainer) {\r\n      this.menuContainer.addEventListener(\r\n        \"scroll\",\r\n        this.menuContainerScrollEvent,\r\n        false\r\n      );\r\n    } else {\r\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\r\n    }\r\n  }\r\n\r\n  unbind(menu) {\r\n    this.tribute.range\r\n      .getDocument()\r\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\r\n    this.tribute.range\r\n      .getDocument()\r\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\r\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\r\n\r\n    if (this.menuContainer) {\r\n      this.menuContainer.removeEventListener(\r\n        \"scroll\",\r\n        this.menuContainerScrollEvent,\r\n        false\r\n      );\r\n    } else {\r\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\r\n    }\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return () => {\r\n      var context = this,\r\n        args = arguments;\r\n      var later = () => {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      var callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  }\r\n}\r\n\r\nexport default TributeMenuEvents;\r\n","// Thanks to https://github.com/jeff-collins/ment.io\r\nimport \"./utils\";\r\n\r\nclass TributeRange {\r\n    constructor(tribute) {\r\n        this.tribute = tribute\r\n        this.tribute.range = this\r\n    }\r\n\r\n    getDocument() {\r\n        let iframe\r\n        if (this.tribute.current.collection) {\r\n            iframe = this.tribute.current.collection.iframe\r\n        }\r\n\r\n        if (!iframe) {\r\n            return document\r\n        }\r\n\r\n        return iframe.contentWindow.document\r\n    }\r\n\r\n    positionMenuAtCaret(scrollTo) {\r\n        let context = this.tribute.current,\r\n            coordinates\r\n\r\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\r\n\r\n        if (typeof info !== 'undefined') {\r\n\r\n            if(!this.tribute.positionMenu){\r\n                this.tribute.menu.style.cssText = `display: block;`\r\n                return\r\n            }\r\n\r\n            if (!this.isContentEditable(context.element)) {\r\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\r\n                    info.mentionPosition)\r\n            }\r\n            else {\r\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\r\n            }\r\n\r\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\r\n                                     left: ${coordinates.left}px;\r\n                                     right: ${coordinates.right}px;\r\n                                     bottom: ${coordinates.bottom}px;\r\n                                     max-height: ${coordinates.maxHeight || 500}px;\r\n                                     max-width: ${coordinates.maxWidth || 300}px;\r\n                                     position: ${coordinates.position || 'absolute'};\r\n                                     display: block;`\r\n\r\n            if (coordinates.left === 'auto') {\r\n                this.tribute.menu.style.left = 'auto'\r\n            }\r\n\r\n            if (coordinates.top === 'auto') {\r\n                this.tribute.menu.style.top = 'auto'\r\n            }\r\n\r\n            if (scrollTo) this.scrollIntoView()\r\n\r\n        } else {\r\n            this.tribute.menu.style.cssText = 'display: none'\r\n        }\r\n    }\r\n\r\n    get menuContainerIsBody() {\r\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\r\n    }\r\n\r\n\r\n    selectElement(targetElement, path, offset) {\r\n        let range\r\n        let elem = targetElement\r\n\r\n        if (path) {\r\n            for (var i = 0; i < path.length; i++) {\r\n                elem = elem.childNodes[path[i]]\r\n                if (elem === undefined) {\r\n                    return\r\n                }\r\n                while (elem.length < offset) {\r\n                    offset -= elem.length\r\n                    elem = elem.nextSibling\r\n                }\r\n                if (elem.childNodes.length === 0 && !elem.length) {\r\n                    elem = elem.previousSibling\r\n                }\r\n            }\r\n        }\r\n        let sel = this.getWindowSelection()\r\n\r\n        range = this.getDocument().createRange()\r\n        range.setStart(elem, offset)\r\n        range.setEnd(elem, offset)\r\n        range.collapse(true)\r\n\r\n        try {\r\n            sel.removeAllRanges()\r\n        } catch (error) {}\r\n\r\n        sel.addRange(range)\r\n        targetElement.focus()\r\n    }\r\n\r\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\r\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\r\n\r\n        if (info !== undefined) {\r\n            let context = this.tribute.current\r\n            let replaceEvent = new CustomEvent('tribute-replaced', {\r\n                detail: {\r\n                    item: item,\r\n                    instance: context,\r\n                    context: info,\r\n                    event: originalEvent,\r\n                }\r\n            })\r\n\r\n            if (!this.isContentEditable(context.element)) {\r\n                let myField = this.tribute.current.element\r\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\r\n                    ? this.tribute.replaceTextSuffix\r\n                    : ' '\r\n                text += textSuffix\r\n                let startPos = info.mentionPosition\r\n                let endPos = info.mentionPosition + info.mentionText.length + (textSuffix === '' ? 1 : textSuffix.length)\r\n                if (!this.tribute.autocompleteMode) {\r\n                    endPos += info.mentionTriggerChar.length - 1\r\n                }\r\n                myField.value = myField.value.substring(0, startPos) + text +\r\n                    myField.value.substring(endPos, myField.value.length)\r\n                myField.selectionStart = startPos + text.length\r\n                myField.selectionEnd = startPos + text.length\r\n            } else {\r\n                // add a space to the end of the pasted text\r\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\r\n                    ? this.tribute.replaceTextSuffix\r\n                    : '\\xA0'\r\n                text += textSuffix\r\n                let endPos = info.mentionPosition + info.mentionText.length\r\n                if (!this.tribute.autocompleteMode) {\r\n                    endPos += info.mentionTriggerChar.length\r\n                }\r\n                this.pasteHtml(text, info.mentionPosition, endPos)\r\n            }\r\n\r\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\r\n            context.element.dispatchEvent(replaceEvent)\r\n        }\r\n    }\r\n\r\n    pasteHtml(html, startPos, endPos) {\r\n        let range, sel\r\n        sel = this.getWindowSelection()\r\n        range = this.getDocument().createRange()\r\n        range.setStart(sel.anchorNode, startPos)\r\n        range.setEnd(sel.anchorNode, endPos)\r\n        range.deleteContents()\r\n\r\n        let el = this.getDocument().createElement('div')\r\n        el.innerHTML = html\r\n        let frag = this.getDocument().createDocumentFragment(),\r\n            node, lastNode\r\n        while ((node = el.firstChild)) {\r\n            lastNode = frag.appendChild(node)\r\n        }\r\n        range.insertNode(frag)\r\n\r\n        // Preserve the selection\r\n        if (lastNode) {\r\n            range = range.cloneRange()\r\n            range.setStartAfter(lastNode)\r\n            range.collapse(true)\r\n            sel.removeAllRanges()\r\n            sel.addRange(range)\r\n        }\r\n    }\r\n\r\n    getWindowSelection() {\r\n        if (this.tribute.collection.iframe) {\r\n            return this.tribute.collection.iframe.contentWindow.getSelection()\r\n        }\r\n\r\n        return window.getSelection()\r\n    }\r\n\r\n    getNodePositionInParent(element) {\r\n        if (element.parentNode === null) {\r\n            return 0\r\n        }\r\n\r\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\r\n            let node = element.parentNode.childNodes[i]\r\n\r\n            if (node === element) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n\r\n    getContentEditableSelectedPath(ctx) {\r\n        let sel = this.getWindowSelection()\r\n        let selected = sel.anchorNode\r\n        let path = []\r\n        let offset\r\n\r\n        if (selected != null) {\r\n            let i\r\n            let ce = selected.contentEditable\r\n            while (selected !== null && ce !== 'true') {\r\n                i = this.getNodePositionInParent(selected)\r\n                path.push(i)\r\n                selected = selected.parentNode\r\n                if (selected !== null) {\r\n                    ce = selected.contentEditable\r\n                }\r\n            }\r\n            path.reverse()\r\n\r\n            // getRangeAt may not exist, need alternative\r\n            offset = sel.getRangeAt(0).startOffset\r\n\r\n            return {\r\n                selected: selected,\r\n                path: path,\r\n                offset: offset\r\n            }\r\n        }\r\n    }\r\n\r\n    getTextPrecedingCurrentSelection() {\r\n        let context = this.tribute.current,\r\n            text = ''\r\n\r\n        if (!this.isContentEditable(context.element)) {\r\n            let textComponent = this.tribute.current.element;\r\n            if (textComponent) {\r\n                let startPos = textComponent.selectionStart\r\n                if (textComponent.value && startPos >= 0) {\r\n                    text = textComponent.value.substring(0, startPos)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            let selectedElem = this.getWindowSelection().anchorNode\r\n\r\n            if (selectedElem != null) {\r\n                let workingNodeContent = selectedElem.textContent\r\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\r\n\r\n                if (workingNodeContent && selectStartOffset >= 0) {\r\n                    text = workingNodeContent.substring(0, selectStartOffset)\r\n                }\r\n            }\r\n        }\r\n\r\n        return text\r\n    }\r\n\r\n    getLastWordInText(text) {\r\n        var wordsArray;\r\n        if (this.tribute.autocompleteSeparator) {\r\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\r\n        } else {\r\n            wordsArray = text.split(/\\s+/);\r\n        }\r\n        var wordsCount = wordsArray.length - 1;\r\n        return wordsArray[wordsCount];\r\n    }\r\n\r\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\r\n        let ctx = this.tribute.current\r\n        let selected, path, offset\r\n\r\n        if (!this.isContentEditable(ctx.element)) {\r\n            selected = this.tribute.current.element\r\n        } else {\r\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\r\n\r\n            if (selectionInfo) {\r\n                selected = selectionInfo.selected\r\n                path = selectionInfo.path\r\n                offset = selectionInfo.offset\r\n            }\r\n        }\r\n\r\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\r\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\r\n\r\n        if (isAutocomplete) {\r\n            return {\r\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\r\n                mentionText: lastWordOfEffectiveRange,\r\n                mentionSelectedElement: selected,\r\n                mentionSelectedPath: path,\r\n                mentionSelectedOffset: offset\r\n            }\r\n        }\r\n\r\n        if (effectiveRange !== undefined && effectiveRange !== null) {\r\n            let mostRecentTriggerCharPos = -1\r\n            let triggerChar\r\n\r\n            this.tribute.collection.forEach(config => {\r\n                let c = config.trigger\r\n                let idx = config.requireLeadingSpace ?\r\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\r\n                    effectiveRange.lastIndexOf(c)\r\n\r\n                if (idx > mostRecentTriggerCharPos) {\r\n                    mostRecentTriggerCharPos = idx\r\n                    triggerChar = c\r\n                    requireLeadingSpace = config.requireLeadingSpace\r\n                }\r\n            })\r\n\r\n            if (mostRecentTriggerCharPos >= 0 &&\r\n                (\r\n                    mostRecentTriggerCharPos === 0 ||\r\n                    !requireLeadingSpace ||\r\n                    /\\s/.test(\r\n                        effectiveRange.substring(\r\n                            mostRecentTriggerCharPos - 1,\r\n                            mostRecentTriggerCharPos)\r\n                    )\r\n                )\r\n            ) {\r\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\r\n                    effectiveRange.length)\r\n\r\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\r\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\r\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\r\n                    (\r\n                        firstSnippetChar === ' ' ||\r\n                        firstSnippetChar === '\\xA0'\r\n                    )\r\n                if (hasTrailingSpace) {\r\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\r\n                }\r\n\r\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\r\n\r\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\r\n\r\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\r\n                    return {\r\n                        mentionPosition: mostRecentTriggerCharPos,\r\n                        mentionText: currentTriggerSnippet,\r\n                        mentionSelectedElement: selected,\r\n                        mentionSelectedPath: path,\r\n                        mentionSelectedOffset: offset,\r\n                        mentionTriggerChar: triggerChar\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    lastIndexWithLeadingSpace (str, trigger) {\r\n        let reversedStr = str.split('').reverse().join('')\r\n        let index = -1\r\n\r\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\r\n            let firstChar = cidx === str.length - 1\r\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\r\n\r\n            let match = true\r\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\r\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\r\n                match = false\r\n                break\r\n              }\r\n            }\r\n\r\n            if (match && (firstChar || leadingSpace)) {\r\n                index = str.length - 1 - cidx\r\n                break\r\n            }\r\n        }\r\n\r\n        return index\r\n    }\r\n\r\n    isContentEditable(element) {\r\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\r\n    }\r\n\r\n    isMenuOffScreen(coordinates, menuDimensions) {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        let doc = document.documentElement\r\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\r\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\r\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\r\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\r\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\r\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\r\n\r\n        return {\r\n            top: menuTop < Math.floor(windowTop),\r\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\r\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\r\n            left: menuLeft < Math.floor(windowLeft)\r\n        }\r\n    }\r\n\r\n    getMenuDimensions() {\r\n        // Width of the menu depends of its contents and position\r\n        // We must check what its width would be without any obstruction\r\n        // This way, we can achieve good positioning for flipping the menu\r\n        let dimensions = {\r\n            width: null,\r\n            height: null\r\n        }\r\n\r\n        this.tribute.menu.style.cssText = `top: 0px;\r\n                                 left: 0px;\r\n                                 position: fixed;\r\n                                 display: block;\r\n                                 visibility; hidden;\r\n                                 max-height:500px;`\r\n       dimensions.width = this.tribute.menu.offsetWidth\r\n       dimensions.height = this.tribute.menu.offsetHeight\r\n\r\n       this.tribute.menu.style.cssText = `display: none;`\r\n\r\n       return dimensions\r\n    }\r\n\r\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\r\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\r\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\r\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\r\n            'paddingRight', 'paddingBottom', 'paddingLeft',\r\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\r\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\r\n            'textAlign', 'textTransform', 'textIndent',\r\n            'textDecoration', 'letterSpacing', 'wordSpacing'\r\n        ]\r\n\r\n        let isFirefox = (window.mozInnerScreenX !== null)\r\n\r\n        let div = this.getDocument().createElement('div')\r\n        div.id = 'input-textarea-caret-position-mirror-div'\r\n        this.getDocument().body.appendChild(div)\r\n\r\n        let style = div.style\r\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\r\n\r\n        style.whiteSpace = 'pre-wrap'\r\n        if (element.nodeName !== 'INPUT') {\r\n            style.wordWrap = 'break-word'\r\n        }\r\n\r\n        style.position = 'absolute'\r\n        style.visibility = 'hidden'\r\n\r\n        // transfer the element's properties to the div\r\n        properties.forEach(prop => {\r\n            style[prop] = computed[prop]\r\n        })\r\n\r\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\r\n        // if (isFirefox) {\r\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\r\n        //     if (element.scrollHeight > parseInt(computed.height))\r\n        //         style.overflowY = 'scroll'\r\n        // } else {\r\n        //     style.overflow = 'hidden'\r\n        // }\r\n\r\n        let span0 = document.createElement('span')\r\n        span0.textContent =  element.value.substring(0, position)\r\n        div.appendChild(span0)\r\n\r\n        if (element.nodeName === 'INPUT') {\r\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\r\n        }\r\n\r\n        //Create a span in the div that represents where the cursor\r\n        //should be\r\n        let span = this.getDocument().createElement('span')\r\n        //we give it no content as this represents the cursor\r\n        span.textContent = '&#x200B;'\r\n        div.appendChild(span)\r\n\r\n        let span2 = this.getDocument().createElement('span');\r\n        span2.textContent = element.value.substring(position);\r\n        div.appendChild(span2);\r\n\r\n        let rect = element.getBoundingClientRect()\r\n\r\n        //position the div exactly over the element\r\n        //so we can get the bounding client rect for the span and\r\n        //it should represent exactly where the cursor is\r\n        div.style.position = 'fixed';\r\n        div.style.left = rect.left + 'px';\r\n        div.style.top = rect.top + 'px';\r\n        div.style.width = rect.width + 'px';\r\n        div.style.height = rect.height + 'px';\r\n        div.scrollTop = element.scrollTop;\r\n\r\n        var spanRect = span.getBoundingClientRect();\r\n        this.getDocument().body.removeChild(div)\r\n        return this.getFixedCoordinatesRelativeToRect(spanRect);\r\n    }\r\n\r\n    getContentEditableCaretPosition(selectedNodePosition) {\r\n        let range\r\n        let sel = this.getWindowSelection()\r\n\r\n        range = this.getDocument().createRange()\r\n        range.setStart(sel.anchorNode, selectedNodePosition)\r\n        range.setEnd(sel.anchorNode, selectedNodePosition)\r\n\r\n        range.collapse(false)\r\n\r\n        let rect = range.getBoundingClientRect()\r\n\r\n        return this.getFixedCoordinatesRelativeToRect(rect);\r\n    }\r\n\r\n    getFixedCoordinatesRelativeToRect(rect) {\r\n        let coordinates = {\r\n            position: 'fixed',\r\n            left: rect.left,\r\n            top: rect.top + rect.height\r\n        }\r\n\r\n        let menuDimensions = this.getMenuDimensions()\r\n\r\n        var availableSpaceOnTop = rect.top;\r\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\r\n\r\n        //check to see where's the right place to put the menu vertically\r\n        if (availableSpaceOnBottom < menuDimensions.height) {\r\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\r\n            coordinates.top = 'auto';\r\n            coordinates.bottom = window.innerHeight - rect.top;\r\n            if (availableSpaceOnBottom < menuDimensions.height) {\r\n              coordinates.maxHeight = availableSpaceOnTop;\r\n            }\r\n          } else {\r\n            if (availableSpaceOnTop < menuDimensions.height) {\r\n              coordinates.maxHeight = availableSpaceOnBottom;\r\n            }\r\n          }\r\n        }\r\n\r\n        var availableSpaceOnLeft = rect.left;\r\n        var availableSpaceOnRight = window.innerWidth - rect.left;\r\n\r\n        //check to see where's the right place to put the menu horizontally\r\n        if (availableSpaceOnRight < menuDimensions.width) {\r\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\r\n            coordinates.left = 'auto';\r\n            coordinates.right = window.innerWidth - rect.left;\r\n            if (availableSpaceOnRight < menuDimensions.width) {\r\n              coordinates.maxWidth = availableSpaceOnLeft;\r\n            }\r\n          } else {\r\n            if (availableSpaceOnLeft < menuDimensions.width) {\r\n              coordinates.maxWidth = availableSpaceOnRight;\r\n            }\r\n          }\r\n        }\r\n\r\n        return coordinates\r\n    }\r\n\r\n    scrollIntoView(elem) {\r\n        let reasonableBuffer = 20,\r\n            clientRect\r\n        let maxScrollDisplacement = 100\r\n        let e = this.menu\r\n\r\n        if (typeof e === 'undefined') return;\r\n\r\n        while (clientRect === undefined || clientRect.height === 0) {\r\n            clientRect = e.getBoundingClientRect()\r\n\r\n            if (clientRect.height === 0) {\r\n                e = e.childNodes[0]\r\n                if (e === undefined || !e.getBoundingClientRect) {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        let elemTop = clientRect.top\r\n        let elemBottom = elemTop + clientRect.height\r\n\r\n        if (elemTop < 0) {\r\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\r\n        } else if (elemBottom > window.innerHeight) {\r\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\r\n\r\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\r\n                maxY = window.pageYOffset + maxScrollDisplacement\r\n            }\r\n\r\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\r\n\r\n            if (targetY > maxY) {\r\n                targetY = maxY\r\n            }\r\n\r\n            window.scrollTo(0, targetY)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default TributeRange;\r\n","// Thanks to https://github.com/mattyork/fuzzy\r\nclass TributeSearch {\r\n    constructor(tribute) {\r\n        this.tribute = tribute\r\n        this.tribute.search = this\r\n    }\r\n\r\n    simpleFilter(pattern, array) {\r\n        return array.filter(string => {\r\n            return this.test(pattern, string)\r\n        })\r\n    }\r\n\r\n    test(pattern, string) {\r\n        return this.match(pattern, string) !== null\r\n    }\r\n\r\n    match(pattern, string, opts) {\r\n        opts = opts || {}\r\n        let patternIdx = 0,\r\n            result = [],\r\n            len = string.length,\r\n            totalScore = 0,\r\n            currScore = 0,\r\n            pre = opts.pre || '',\r\n            post = opts.post || '',\r\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\r\n            ch, compareChar\r\n\r\n        if (opts.skip) {\r\n            return {rendered: string, score: 0}\r\n        }\r\n\r\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\r\n\r\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\r\n        if (!patternCache) {\r\n            return null\r\n        }\r\n        return {\r\n            rendered: this.render(string, patternCache.cache, pre, post),\r\n            score: patternCache.score\r\n        }\r\n    }\r\n\r\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\r\n        if (this.tribute.autocompleteSeparator) {\r\n            // if the pattern search at end\r\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\r\n        }\r\n\r\n        if (pattern.length === patternIndex) {\r\n\r\n            // calculate score and copy the cache containing the indices where it's found\r\n            return {\r\n                score: this.calculateScore(patternCache),\r\n                cache: patternCache.slice()\r\n            }\r\n        }\r\n\r\n        // if string at end or remaining pattern > remaining string\r\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\r\n            return undefined\r\n        }\r\n\r\n        let c = pattern[patternIndex]\r\n        let index = string.indexOf(c, stringIndex)\r\n        let best, temp\r\n\r\n        while (index > -1) {\r\n            patternCache.push(index)\r\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\r\n            patternCache.pop()\r\n\r\n            // if downstream traversal failed, return best answer so far\r\n            if (!temp) {\r\n                return best\r\n            }\r\n\r\n            if (!best || best.score < temp.score) {\r\n                best = temp\r\n            }\r\n\r\n            index = string.indexOf(c, index + 1)\r\n        }\r\n\r\n        return best\r\n    }\r\n\r\n    calculateScore(patternCache) {\r\n        let score = 0\r\n        let temp = 1\r\n\r\n        patternCache.forEach((index, i) => {\r\n            if (i > 0) {\r\n                if (patternCache[i - 1] + 1 === index) {\r\n                    temp += temp + 1\r\n                }\r\n                else {\r\n                    temp = 1\r\n                }\r\n            }\r\n\r\n            score += temp\r\n        })\r\n\r\n        return score\r\n    }\r\n\r\n    render(string, indices, pre, post) {\r\n        var rendered = string.substring(0, indices[0])\r\n\r\n        indices.forEach((index, i) => {\r\n            rendered += pre + string[index] + post +\r\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\r\n        })\r\n\r\n        return rendered\r\n    }\r\n\r\n    filter(pattern, arr, opts) {\r\n        opts = opts || {}\r\n        return arr\r\n            .reduce((prev, element, idx, arr) => {\r\n                let str = element\r\n\r\n                if (opts.extract) {\r\n                    str = opts.extract(element)\r\n\r\n                    if (!str) { // take care of undefineds / nulls / etc.\r\n                        str = ''\r\n                    }\r\n                }\r\n\r\n                let rendered = this.match(pattern, str, opts)\r\n\r\n                if (rendered != null) {\r\n                    prev[prev.length] = {\r\n                        string: rendered.rendered,\r\n                        score: rendered.score,\r\n                        index: idx,\r\n                        original: element\r\n                    }\r\n                }\r\n\r\n                return prev\r\n            }, [])\r\n\r\n        .sort((a, b) => {\r\n            let compare = b.score - a.score\r\n            if (compare) return compare\r\n            return a.index - b.index\r\n        })\r\n    }\r\n}\r\n\r\nexport default TributeSearch;\r\n","import \"./utils\";\r\nimport TributeEvents from \"./TributeEvents\";\r\nimport TributeMenuEvents from \"./TributeMenuEvents\";\r\nimport TributeRange from \"./TributeRange\";\r\nimport TributeSearch from \"./TributeSearch\";\r\n\r\nclass Tribute {\r\n  constructor({\r\n                values = null,\r\n                loadingItemTemplate = null,\r\n                iframe = null,\r\n                selectClass = \"highlight\",\r\n                containerClass = \"tribute-container\",\r\n                itemClass = \"\",\r\n                trigger = \"@\",\r\n                autocompleteMode = false,\r\n                autocompleteSeparator = null,\r\n                selectTemplate = null,\r\n                menuItemTemplate = null,\r\n                lookup = \"key\",\r\n                fillAttr = \"value\",\r\n                collection = null,\r\n                menuContainer = null,\r\n                noMatchTemplate = null,\r\n                requireLeadingSpace = true,\r\n                allowSpaces = false,\r\n                replaceTextSuffix = null,\r\n                positionMenu = true,\r\n                spaceSelectsMatch = false,\r\n                searchOpts = {},\r\n                menuItemLimit = null,\r\n                menuShowMinLength = 0\r\n              }) {\r\n    this.autocompleteMode = autocompleteMode;\r\n    this.autocompleteSeparator = autocompleteSeparator;\r\n    this.menuSelected = 0;\r\n    this.current = {};\r\n    this.inputEvent = false;\r\n    this.isActive = false;\r\n    this.menuContainer = menuContainer;\r\n    this.allowSpaces = allowSpaces;\r\n    this.replaceTextSuffix = replaceTextSuffix;\r\n    this.positionMenu = positionMenu;\r\n    this.hasTrailingSpace = false;\r\n    this.spaceSelectsMatch = spaceSelectsMatch;\r\n\r\n    if (this.autocompleteMode) {\r\n      trigger = \"\";\r\n      allowSpaces = false;\r\n    }\r\n\r\n    if (values) {\r\n      this.collection = [\r\n        {\r\n          // symbol that starts the lookup\r\n          trigger: trigger,\r\n\r\n          // is it wrapped in an iframe\r\n          iframe: iframe,\r\n\r\n          // class applied to selected item\r\n          selectClass: selectClass,\r\n\r\n          // class applied to the Container\r\n          containerClass: containerClass,\r\n\r\n          // class applied to each item\r\n          itemClass: itemClass,\r\n\r\n          // function called on select that retuns the content to insert\r\n          selectTemplate: (\r\n            selectTemplate || Tribute.defaultSelectTemplate\r\n          ).bind(this),\r\n\r\n          // function called that returns content for an item\r\n          menuItemTemplate: (\r\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\r\n          ).bind(this),\r\n\r\n          // function called when menu is empty, disables hiding of menu.\r\n          noMatchTemplate: (t => {\r\n            if (typeof t === \"string\") {\r\n              if (t.trim() === \"\") return null;\r\n              return t;\r\n            }\r\n            if (typeof t === \"function\") {\r\n              return t.bind(this);\r\n            }\r\n\r\n            return (\r\n              noMatchTemplate ||\r\n              function () {\r\n                return \"<li>No Match Found!</li>\";\r\n              }.bind(this)\r\n            );\r\n          })(noMatchTemplate),\r\n\r\n          // column to search against in the object\r\n          lookup: lookup,\r\n\r\n          // column that contains the content to insert by default\r\n          fillAttr: fillAttr,\r\n\r\n          // array of objects or a function returning an array of objects\r\n          values: values,\r\n\r\n          // useful for when values is an async function\r\n          loadingItemTemplate: loadingItemTemplate,\r\n\r\n          requireLeadingSpace: requireLeadingSpace,\r\n\r\n          searchOpts: searchOpts,\r\n\r\n          menuItemLimit: menuItemLimit,\r\n\r\n          menuShowMinLength: menuShowMinLength\r\n        }\r\n      ];\r\n    } else if (collection) {\r\n      if (this.autocompleteMode)\r\n        console.warn(\r\n          \"Tribute in autocomplete mode does not work for collections\"\r\n        );\r\n      this.collection = collection.map(item => {\r\n        return {\r\n          trigger: item.trigger || trigger,\r\n          iframe: item.iframe || iframe,\r\n          selectClass: item.selectClass || selectClass,\r\n          containerClass: item.containerClass || containerClass,\r\n          itemClass: item.itemClass || itemClass,\r\n          selectTemplate: (\r\n            item.selectTemplate || Tribute.defaultSelectTemplate\r\n          ).bind(this),\r\n          menuItemTemplate: (\r\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\r\n          ).bind(this),\r\n          // function called when menu is empty, disables hiding of menu.\r\n          noMatchTemplate: (t => {\r\n            if (typeof t === \"string\") {\r\n              if (t.trim() === \"\") return null;\r\n              return t;\r\n            }\r\n            if (typeof t === \"function\") {\r\n              return t.bind(this);\r\n            }\r\n\r\n            return (\r\n              noMatchTemplate ||\r\n              function () {\r\n                return \"<li>No Match Found!</li>\";\r\n              }.bind(this)\r\n            );\r\n          })(noMatchTemplate),\r\n          lookup: item.lookup || lookup,\r\n          fillAttr: item.fillAttr || fillAttr,\r\n          values: item.values,\r\n          loadingItemTemplate: item.loadingItemTemplate,\r\n          requireLeadingSpace: item.requireLeadingSpace,\r\n          searchOpts: item.searchOpts || searchOpts,\r\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\r\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\r\n        };\r\n      });\r\n    } else {\r\n      throw new Error(\"[Tribute] No collection specified.\");\r\n    }\r\n\r\n    new TributeRange(this);\r\n    new TributeEvents(this);\r\n    new TributeMenuEvents(this);\r\n    new TributeSearch(this);\r\n  }\r\n\r\n  get isActive() {\r\n    return this._isActive;\r\n  }\r\n\r\n  set isActive(val) {\r\n    if (this._isActive != val) {\r\n      this._isActive = val;\r\n      if (this.current.element) {\r\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\r\n        this.current.element.dispatchEvent(noMatchEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  static defaultSelectTemplate(item) {\r\n    if (typeof item === \"undefined\")\r\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\r\n    if (this.range.isContentEditable(this.current.element)) {\r\n      return (\r\n        '<span class=\"tribute-mention\">' +\r\n        (this.current.collection.trigger +\r\n          item.original[this.current.collection.fillAttr]) +\r\n        \"</span>\"\r\n      );\r\n    }\r\n\r\n    return (\r\n      this.current.collection.trigger +\r\n      item.original[this.current.collection.fillAttr]\r\n    );\r\n  }\r\n\r\n  static defaultMenuItemTemplate(matchItem) {\r\n    return matchItem.string;\r\n  }\r\n\r\n  static inputTypes() {\r\n    return [\"TEXTAREA\", \"INPUT\"];\r\n  }\r\n\r\n  triggers() {\r\n    return this.collection.map(config => {\r\n      return config.trigger;\r\n    });\r\n  }\r\n\r\n  attach(el) {\r\n    if (!el) {\r\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\r\n    }\r\n\r\n    // Check if it is a jQuery collection\r\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\r\n      el = el.get();\r\n    }\r\n\r\n    // Is el an Array/Array-like object?\r\n    if (\r\n      el.constructor === NodeList ||\r\n      el.constructor === HTMLCollection ||\r\n      el.constructor === Array\r\n    ) {\r\n      let length = el.length;\r\n      for (var i = 0; i < length; ++i) {\r\n        this._attach(el[i]);\r\n      }\r\n    } else {\r\n      this._attach(el);\r\n    }\r\n  }\r\n\r\n  _attach(el) {\r\n    if (el.hasAttribute(\"data-tribute\")) {\r\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\r\n    }\r\n\r\n    this.ensureEditable(el);\r\n    this.events.bind(el);\r\n    el.setAttribute(\"data-tribute\", true);\r\n  }\r\n\r\n  ensureEditable(element) {\r\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\r\n      if (element.contentEditable) {\r\n        element.contentEditable = true;\r\n      } else {\r\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\r\n      }\r\n    }\r\n  }\r\n\r\n  createMenu(containerClass) {\r\n    let wrapper = this.range.getDocument().createElement(\"div\"),\r\n      ul = this.range.getDocument().createElement(\"ul\");\r\n    wrapper.className = containerClass;\r\n    wrapper.appendChild(ul);\r\n\r\n    if (this.menuContainer) {\r\n      return this.menuContainer.appendChild(wrapper);\r\n    }\r\n\r\n    return this.range.getDocument().body.appendChild(wrapper);\r\n  }\r\n\r\n  showMenuFor(element, scrollTo) {\r\n    // Only proceed if menu isn't already shown for the current element & mentionText\r\n    if (\r\n      this.isActive &&\r\n      this.current.element === element &&\r\n      this.current.mentionText === this.currentMentionTextSnapshot\r\n    ) {\r\n      return;\r\n    }\r\n    this.currentMentionTextSnapshot = this.current.mentionText;\r\n\r\n    // create the menu if it doesn't exist.\r\n    if (!this.menu) {\r\n      this.menu = this.createMenu(this.current.collection.containerClass);\r\n      element.tributeMenu = this.menu;\r\n      this.menuEvents.bind(this.menu);\r\n    }\r\n\r\n    console.log('showMenuFor');\r\n\r\n    this.isActive = true;\r\n    this.menuSelected = 0;\r\n\r\n    if (!this.current.mentionText) {\r\n      this.current.mentionText = \"\";\r\n    }\r\n\r\n    const processValues = values => {\r\n      // Tribute may not be active any more by the time the value callback returns\r\n      if (!this.isActive) {\r\n        return;\r\n      }\r\n\r\n      let items = this.search.filter(this.current.mentionText, values, {\r\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\r\n        post: this.current.collection.searchOpts.post || \"</span>\",\r\n        skip: this.current.collection.searchOpts.skip,\r\n        extract: el => {\r\n          if (typeof this.current.collection.lookup === \"string\") {\r\n            return el[this.current.collection.lookup];\r\n          } else if (typeof this.current.collection.lookup === \"function\") {\r\n            return this.current.collection.lookup(el, this.current.mentionText);\r\n          } else {\r\n            throw new Error(\r\n              \"Invalid lookup attribute, lookup must be string or function.\"\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      if (this.current.collection.menuItemLimit) {\r\n        items = items.slice(0, this.current.collection.menuItemLimit);\r\n      }\r\n\r\n      this.current.filteredItems = items;\r\n\r\n      let ul = this.menu.querySelector(\"ul\");\r\n\r\n      if (!items.length) {\r\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\r\n          detail: this.menu\r\n        });\r\n        this.current.element.dispatchEvent(noMatchEvent);\r\n        if (\r\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\r\n            !this.current.collection.noMatchTemplate()) ||\r\n          !this.current.collection.noMatchTemplate\r\n        ) {\r\n          this.hideMenu();\r\n        } else {\r\n          typeof this.current.collection.noMatchTemplate === \"function\"\r\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\r\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\r\n          this.range.positionMenuAtCaret(scrollTo);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      ul.innerHTML = \"\";\r\n      let fragment = this.range.getDocument().createDocumentFragment();\r\n\r\n      items.forEach((item, index) => {\r\n        let li = this.range.getDocument().createElement(\"li\");\r\n        li.setAttribute(\"data-index\", index);\r\n        li.className = this.current.collection.itemClass;\r\n        li.addEventListener(\"mousemove\", e => {\r\n          let [li, index] = this._findLiTarget(e.target);\r\n          if (e.movementY !== 0) {\r\n            this.events.setActiveLi(index);\r\n          }\r\n        });\r\n        if (this.menuSelected === index) {\r\n          li.classList.add(this.current.collection.selectClass);\r\n        }\r\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\r\n        fragment.appendChild(li);\r\n      });\r\n      ul.appendChild(fragment);\r\n\r\n      this.range.positionMenuAtCaret(scrollTo);\r\n    };\r\n\r\n    if (typeof this.current.collection.values === \"function\") {\r\n      if (this.current.collection.loadingItemTemplate) {\r\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\r\n        this.range.positionMenuAtCaret(scrollTo);\r\n      }\r\n\r\n      this.current.collection.values(this.current.mentionText, processValues);\r\n    } else {\r\n      processValues(this.current.collection.values);\r\n    }\r\n  }\r\n\r\n  _findLiTarget(el) {\r\n    if (!el) return [];\r\n    const index = el.getAttribute(\"data-index\");\r\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\r\n  }\r\n\r\n  showMenuForCollection(element, collectionIndex) {\r\n    if (element !== document.activeElement) {\r\n      this.placeCaretAtEnd(element);\r\n    }\r\n\r\n    this.current.collection = this.collection[collectionIndex || 0];\r\n    this.current.externalTrigger = true;\r\n    this.current.element = element;\r\n\r\n    if (element.isContentEditable)\r\n      this.insertTextAtCursor(this.current.collection.trigger);\r\n    else this.insertAtCaret(element, this.current.collection.trigger);\r\n\r\n    this.showMenuFor(element);\r\n  }\r\n\r\n  // TODO: make sure this works for inputs/textareas\r\n  placeCaretAtEnd(el) {\r\n    el.focus();\r\n    if (\r\n      typeof window.getSelection != \"undefined\" &&\r\n      typeof document.createRange != \"undefined\"\r\n    ) {\r\n      var range = document.createRange();\r\n      range.selectNodeContents(el);\r\n      range.collapse(false);\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    } else if (typeof document.body.createTextRange != \"undefined\") {\r\n      var textRange = document.body.createTextRange();\r\n      textRange.moveToElementText(el);\r\n      textRange.collapse(false);\r\n      textRange.select();\r\n    }\r\n  }\r\n\r\n  // for contenteditable\r\n  insertTextAtCursor(text) {\r\n    var sel, range, html;\r\n    sel = window.getSelection();\r\n    range = sel.getRangeAt(0);\r\n    range.deleteContents();\r\n    var textNode = document.createTextNode(text);\r\n    range.insertNode(textNode);\r\n    range.selectNodeContents(textNode);\r\n    range.collapse(false);\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n\r\n  // for regular inputs\r\n  insertAtCaret(textarea, text) {\r\n    var scrollPos = textarea.scrollTop;\r\n    var caretPos = textarea.selectionStart;\r\n\r\n    var front = textarea.value.substring(0, caretPos);\r\n    var back = textarea.value.substring(\r\n      textarea.selectionEnd,\r\n      textarea.value.length\r\n    );\r\n    textarea.value = front + text + back;\r\n    caretPos = caretPos + text.length;\r\n    textarea.selectionStart = caretPos;\r\n    textarea.selectionEnd = caretPos;\r\n    textarea.focus();\r\n    textarea.scrollTop = scrollPos;\r\n  }\r\n\r\n  hideMenu() {\r\n    if (this.menu) {\r\n      this.menu.style.cssText = \"display: none;\";\r\n      this.isActive = false;\r\n      this.menuSelected = 0;\r\n      this.current = {};\r\n    }\r\n  }\r\n\r\n  selectItemAtIndex(index, originalEvent) {\r\n    index = parseInt(index);\r\n    if (typeof index !== \"number\" || isNaN(index)) return;\r\n    let item = this.current.filteredItems[index];\r\n    let content = this.current.collection.selectTemplate(item);\r\n    if (content !== null) this.replaceText(content, originalEvent, item);\r\n  }\r\n\r\n  replaceText(content, originalEvent, item) {\r\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\r\n  }\r\n\r\n  _append(collection, newValues, replace) {\r\n    if (typeof collection.values === \"function\") {\r\n      throw new Error(\"Unable to append to values, as it is a function.\");\r\n    } else if (!replace) {\r\n      collection.values = collection.values.concat(newValues);\r\n    } else {\r\n      collection.values = newValues;\r\n    }\r\n  }\r\n\r\n  append(collectionIndex, newValues, replace) {\r\n    let index = parseInt(collectionIndex);\r\n    if (typeof index !== \"number\")\r\n      throw new Error(\"please provide an index for the collection to update.\");\r\n\r\n    let collection = this.collection[index];\r\n\r\n    this._append(collection, newValues, replace);\r\n  }\r\n\r\n  appendCurrent(newValues, replace) {\r\n    if (this.isActive) {\r\n      this._append(this.current.collection, newValues, replace);\r\n    } else {\r\n      throw new Error(\r\n        \"No active state. Please use append instead and pass an index.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  detach(el) {\r\n    if (!el) {\r\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\r\n    }\r\n\r\n    // Check if it is a jQuery collection\r\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\r\n      el = el.get();\r\n    }\r\n\r\n    // Is el an Array/Array-like object?\r\n    if (\r\n      el.constructor === NodeList ||\r\n      el.constructor === HTMLCollection ||\r\n      el.constructor === Array\r\n    ) {\r\n      let length = el.length;\r\n      for (var i = 0; i < length; ++i) {\r\n        this._detach(el[i]);\r\n      }\r\n    } else {\r\n      this._detach(el);\r\n    }\r\n  }\r\n\r\n  _detach(el) {\r\n    this.events.unbind(el);\r\n    if (el.tributeMenu) {\r\n      this.menuEvents.unbind(el.tributeMenu);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      el.removeAttribute(\"data-tribute\");\r\n      this.isActive = false;\r\n      if (el.tributeMenu) {\r\n        el.tributeMenu.remove();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Tribute;\r\n"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","prototype","TributeEvents","tribute","events","this","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keys","forEach","o","key","keyCode","callbacks","value","toLowerCase","inputEvent","call","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","console","log","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","find","charCodeAt","mentionText","length","collection","menuShowMinLength","map","v","includes","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","arguments","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","len","firstChar","match","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","Math","floor","ceil","dimensions","offsetWidth","offsetHeight","flipped","div","id","body","computed","whiteSpace","wordWrap","visibility","prop","span0","replace","span","span2","rect","spanRect","removeChild","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","warn","jQuery","get","constructor","NodeList","HTMLCollection","Array","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","positionMenuAtCaret","fragment","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}